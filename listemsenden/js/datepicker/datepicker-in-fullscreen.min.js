! function(e, t, i) {
    var a = function(e, t) {
        this.init(e, t)
    };
    a.DEFAULTS = {
        touchSwipe: !0,
        effect: "3",
        blockScroll: !0,
        closeOnChange: !0,
        format: "MMMM DD, YYYY",
        additionalTarget: "",
        additionalTargetFormat: "MMMM DD, YYYY",
        fakeInput: !0,
        fakeInputFormat: "MMMM DD, YYYY",
        todayWord: "Today",
        clearWord: "Clear",
        closeWord: "Close",
        template: ' <div class="datepicker-in-fullscreen-modal">  <div class="datepicker-in-fullscreen-content">  <div class="datepicker-in-fullscreen"></div>  <div class="datepicker-in-fullscreen-controls"> <a class="dpifs-clear">{{clear}}</a><a class="dpifs-close">{{close}}</a>  </div>  </div>  </div>  <div class="datepicker-in-fullscreen-background"></div> ',
        datepicker: {
            calendarWeeks: !1,
            datesDisabled: [],
            daysOfWeekDisabled: [],
            daysOfWeekHighlighted: [],
            startDate: -1 / 0,
            endDate: 1 / 0,
            maxViewMode: 2,
            minViewMode: 0,
            startView: 0,
            language: "en",
            templates: {
                leftArrow: "&laquo;",
                rightArrow: "&raquo;"
            },
            title: "",
            todayHighlight: !1,
            weekStart: 0
        },
        beforeOpen: function(e, t) {},
        beforeClose: function(e, t) {},
        onChange: function(e, t) {}
    }, a.prototype.init = function(e, i) {
        var n = t.extend(!0, {}, a.DEFAULTS, i),
            l = t(e),
            r = null == l.attr("placeholder") ? "" : l.attr("placeholder"),
            o = t('<div class="dpifs-fake-input"></div>'),
            d = t(document.body),
            c = "",
            s = "",
            f = !1;

        function p() {
            n.beforeClose(c, n), c.removeClass("dpifs-show"), f && setTimeout(function() {
                d.css("padding-right", ""), d.removeClass("dpifs-hide-scrollbar")
            }, 200)
        }

        function u(e) {
            l.val(e).trigger("input"), n.onChange(c, n)
        }

        function m(e) {
            var t = moment(e, n.format),
                i = t.isValid() ? t.format(n.fakeInputFormat) : e;
            o.text(i)
        }

        function v(e) {
            var i = moment(e, n.format),
                a = i.isValid() ? i.format(n.fakeInputFormat) : e;
            t(n.additionalTarget).val(a).text(a)
        }
        m("" == l.val() ? r : l.val()), v("" == l.val() ? r : l.val()), this.updateFakeInput = function() {
            m("" == l.val() ? r : l.val()), v("" == l.val() ? r : l.val())
        }, n.template = n.template.split("{{today}}").join(n.todayWord), n.template = n.template.split("{{clear}}").join(n.clearWord), n.template = n.template.split("{{close}}").join(n.closeWord), n.fakeInput && (o.insertAfter(l), o.on("click", function() {
            l.trigger("click")
        })), l.on("click", function() {
            t(".datepicker-in-fullscreen-modal, .datepicker-in-fullscreen-background").remove(), c = t(n.template), null != l.attr("data-effect") ? c.filter(".datepicker-in-fullscreen-modal").addClass("dpifs-effect-" + l.attr("data-effect")) : c.filter(".datepicker-in-fullscreen-modal").addClass("dpifs-effect-" + n.effect), d.prepend(c), d.css("padding-right").split("px").join("") <= 0 && d.css("margin-right").split("px").join("") <= 0 && n.blockScroll ? (d.css("padding-right", function() {
                var e = document.createElement("div");
                e.style.visibility = "hidden", e.style.width = "100px", e.style.msOverflowStyle = "scrollbar", document.body.appendChild(e);
                var t = e.offsetWidth;
                e.style.overflow = "scroll";
                var i = document.createElement("div");
                i.style.width = "100%", e.appendChild(i);
                var a = i.offsetWidth;
                return e.parentNode.removeChild(e), t - a
            }() + "px"), d.addClass("dpifs-hide-scrollbar"), f = !0) : f = !1, n.beforeOpen(c, n), s = c.find(".datepicker-in-fullscreen").datepicker(n.datepicker).datepicker("setDate", moment(l.val(), n.format).toDate()).on("changeDate", function(e) {
                var t = moment(e.date).format(n.format);
                u(t), m(t), v(t), n.closeOnChange && p()
            }), c.addClass("dpifs-show"), c.find(".dpifs-today").on("click", function(e) {
                e.preventDefault(), s.datepicker("setDate", moment().toDate())
            }), c.find(".dpifs-clear").on("click", function(e) {
                e.preventDefault(), u(""), m(""), v(""), p()
            }), c.find(".dpifs-close").on("click", function(e) {
                e.preventDefault(), p()
            }), n.touchSwipe && c.find(".datepicker-in-fullscreen-content").swipe({
                swipe: function(e, t, i, a, n, l) {
                    "right" == t ? c.find(".datepicker-inline>div:visible thead .prev").trigger("click") : "left" == t && c.find(".datepicker-inline>div:visible thead .next").trigger("click")
                }
            }), c.filter(".datepicker-in-fullscreen-background").on("click", function() {
                p()
            }), c.on("touchmove", function(e) {
                return !1
            })
        })
    }, t.fn.datepickerInFullscreen = function(e, i, n) {
        return this.each(function(l, r) {
            var o = t(this),
                d = o.data("datepickerInFullscreen");
            d || "string" == typeof e || o.data("datepickerInFullscreen", new a(this, e)), d && "string" == typeof e && d[e](i, n)
        })
    }
}(window, jQuery);